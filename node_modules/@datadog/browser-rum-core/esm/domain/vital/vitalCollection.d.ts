import type { ClocksState, Duration, Context } from '@datadog/browser-core';
import type { LifeCycle } from '../lifeCycle';
import { VitalType } from '../../rawRumEvent.types';
import type { PageStateHistory } from '../contexts/pageStateHistory';
export interface DurationVitalStart {
    name: string;
    context?: Context;
    details?: string;
}
export interface DurationVitalStop {
    context?: Context;
    details?: string;
}
export interface DurationVitalInstance {
    stop: (options?: DurationVitalStop) => void;
}
export interface DurationVital {
    name: string;
    type: VitalType.DURATION;
    startClocks: ClocksState;
    duration: Duration;
    details?: string;
    context?: Context;
}
export declare function startVitalCollection(lifeCycle: LifeCycle, pageStateHistory: PageStateHistory): {
    addDurationVital: (vital: DurationVital) => void;
    startDurationVital: (startVital: DurationVitalStart) => DurationVitalInstance;
};
export declare function createVitalInstance(stopCallback: (vital: DurationVital) => void, vitalStart: DurationVitalStart): DurationVitalInstance;
